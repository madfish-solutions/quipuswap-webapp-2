import { FC, useContext } from 'react';

import { ColorThemeContext } from '@providers/color-theme-context';
import { useSvgHelper } from '@shared/hooks';
import { IconProps } from '@shared/types';

interface Props extends IconProps {
  colored?: boolean;
}

const asciiLetterA = 97;

const valuesOfDAttribute = [
  'M1.09438 2.20764C1.18836 2.07726 1.33928 2 1.5 2H7.5C7.71522 2 7.90629 2.13772 7.97435 2.34189L11 11.4189L14.0257 2.34189C14.0937 2.13772 14.2848 2 14.5 2H20.5C20.664 2 20.8176 2.08042 20.911 2.2152C21.0044 2.34999 21.0257 2.52201 20.9682 2.67556L19.4682 6.67556C19.3712 6.93412 19.083 7.06512 18.8244 6.96816C18.5659 6.8712 18.4349 6.583 18.5318 6.32444L19.7785 3H14.8604L11.4743 13.1581C11.4063 13.3623 11.2152 13.5 11 13.5C10.7848 13.5 10.5937 13.3623 10.5257 13.1581L7.13962 3H2.19372L7.86038 20H12C12.2761 20 12.5 20.2239 12.5 20.5C12.5 20.7761 12.2761 21 12 21H7.5C7.28479 21 7.09372 20.8623 7.02566 20.6581L1.02566 2.65811C0.974837 2.50564 1.00041 2.33803 1.09438 2.20764Z',
  'M17.5382 9C17.1148 9 16.747 9.04608 16.4303 9.1321L16.4166 9.13562C16.094 9.2135 15.8104 9.32842 15.5621 9.47732L15.55 9.48453C15.2968 9.62686 15.0704 9.80165 14.8699 10.0101L14.8618 10.0185C14.7414 10.1379 14.6247 10.266 14.512 10.4029L15.2285 11.1317C15.4506 10.8682 15.7027 10.6462 15.9864 10.4705C16.4392 10.1791 16.9341 10.0277 17.4618 10.0277C18.0123 10.0277 18.5096 10.1826 18.8743 10.5599C19.2363 10.9238 19.3996 11.3959 19.3996 11.9238V12.0402C19.3996 12.5371 19.2066 12.969 18.8403 13.3057L18.839 13.307C18.4478 13.664 17.8823 13.7867 17.2629 13.7867H16.7686V14.8643H17.2323C17.8733 14.8643 18.4439 14.9972 18.8856 15.3239C19.3756 15.6665 19.5985 16.1872 19.5985 16.7936V16.8934C19.5985 17.4894 19.4135 18.0158 19.0038 18.4149L19.003 18.4157C18.5982 18.8084 18.0552 18.9723 17.4465 18.9723C16.7785 18.9723 16.1877 18.7989 15.7279 18.4021L15.7156 18.3912C15.4708 18.1655 15.253 17.905 15.061 17.6123L14.1555 18.3746C14.2548 18.519 14.3614 18.6587 14.4752 18.7938C14.6785 19.0237 14.9137 19.2317 15.1824 19.4176C15.4515 19.5861 15.7719 19.7274 16.1485 19.8372C16.5118 19.943 16.9425 20 17.4465 20C18.0032 20 18.5015 19.9285 18.9454 19.7913C19.391 19.6425 19.7605 19.439 20.0622 19.1861C20.3627 18.9342 20.5925 18.6334 20.7552 18.2799C20.9152 17.9321 21 17.5337 21 17.0762C21 16.7235 20.9504 16.4282 20.8615 16.1825L20.8597 16.1773C20.7665 15.9104 20.6392 15.6908 20.4815 15.511L20.4732 15.5015C20.3228 15.3208 20.1406 15.1737 19.9221 15.0594C19.9151 15.0557 19.9082 15.0519 19.9014 15.0479C19.6851 14.9213 19.4453 14.8292 19.1791 14.7732C18.9477 14.7246 18.782 14.5204 18.782 14.2839V14.1842C18.782 13.9461 18.95 13.741 19.1834 13.694C19.4073 13.649 19.6176 13.5732 19.8159 13.4664C20.0069 13.3529 20.1743 13.2096 20.3195 13.0342L20.328 13.024C20.4758 12.855 20.5924 12.6528 20.6749 12.4107L20.68 12.3965C20.7683 12.1609 20.8164 11.889 20.8164 11.5748C20.8164 11.1768 20.7384 10.8319 20.5916 10.5306L20.5868 10.5207C20.4475 10.2181 20.2432 9.95873 19.9663 9.73994C19.9617 9.73632 19.9572 9.73261 19.9527 9.72883C19.6852 9.50172 19.35 9.32106 18.9364 9.19404L18.9334 9.19313C18.5311 9.06683 18.0677 9 17.5382 9ZM16.175 8.16521C16.5907 8.05306 17.0466 8 17.5382 8C18.1503 8 18.7164 8.07707 19.2314 8.23854C19.7523 8.39868 20.2098 8.63707 20.5932 8.96079C20.9845 9.27169 21.2868 9.65155 21.493 10.0976C21.7117 10.5485 21.8164 11.044 21.8164 11.5748C21.8164 11.9891 21.7532 12.3797 21.619 12.7405C21.4984 13.0917 21.3214 13.406 21.0854 13.6772C20.9089 13.8894 20.7078 14.0729 20.4829 14.2265C20.7723 14.392 21.0249 14.6023 21.2377 14.8566C21.4854 15.1405 21.6725 15.4724 21.8029 15.8451C21.9378 16.2192 22 16.6321 22 17.0762C22 17.6602 21.891 18.2037 21.6636 18.6979C21.4388 19.1865 21.1179 19.606 20.7046 19.9524C20.2935 20.297 19.8079 20.5583 19.2563 20.7418L19.2467 20.7449C18.6925 20.917 18.091 21 17.4465 21C16.8695 21 16.3416 20.9351 15.8687 20.7972C15.413 20.6644 15.0019 20.4861 14.6405 20.2581C14.6349 20.2545 14.6293 20.2508 14.6238 20.2471C14.2858 20.0144 13.9844 19.7493 13.7216 19.4512L13.7143 19.443C13.4712 19.1548 13.2555 18.8482 13.0674 18.5235C12.9457 18.3136 12.9924 18.0466 13.178 17.8903L14.8759 16.461C14.9935 16.362 15.1501 16.3226 15.3006 16.3541C15.451 16.3857 15.5786 16.4847 15.6465 16.6227C15.8566 17.0494 16.1051 17.3885 16.3871 17.6501C16.6204 17.8487 16.9561 17.9723 17.4465 17.9723C17.8777 17.9723 18.1402 17.8593 18.3064 17.6982C18.4879 17.5212 18.5985 17.272 18.5985 16.8934V16.7936C18.5985 16.4502 18.4871 16.2641 18.3093 16.1412C18.3043 16.1377 18.2993 16.1341 18.2945 16.1305C18.0845 15.9737 17.7503 15.8643 17.2323 15.8643H16.2686C15.9925 15.8643 15.7686 15.6404 15.7686 15.3643V13.2867C15.7686 13.0106 15.9925 12.7867 16.2686 12.7867H17.2629C17.7848 12.7867 18.0453 12.6771 18.1643 12.5689C18.3277 12.4183 18.3996 12.252 18.3996 12.0402V11.9238C18.3996 11.6113 18.3091 11.4089 18.1637 11.2636L18.1565 11.2564C18.032 11.1267 17.8272 11.0277 17.4618 11.0277C17.1346 11.0277 16.8253 11.1191 16.5247 11.3133L16.5159 11.319C16.2173 11.5031 15.9495 11.7781 15.7188 12.1639C15.6393 12.2968 15.5027 12.3853 15.349 12.4037C15.1952 12.422 15.0417 12.3681 14.9331 12.2577L13.4953 10.7951C13.3256 10.6225 13.3039 10.3532 13.4437 10.1557C13.6621 9.84725 13.8985 9.56586 14.1533 9.31253C14.4192 9.03698 14.7199 8.80453 15.0539 8.61602C15.3935 8.41334 15.7684 8.26404 16.175 8.16521Z'
];

export const V3Category: FC<Props> = ({ colored, ...props }) => {
  const { getId, getUrl } = useSvgHelper('TezotopiaCategory');
  const { themeColors } = useContext(ColorThemeContext);

  return (
    <svg width={24} height={24} fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
      <>
        {valuesOfDAttribute.map((value, index) => (
          <path
            d={value}
            key={index}
            fillRule="evenodd"
            clipRule="evenodd"
            fill={colored ? getUrl(String.fromCharCode(asciiLetterA + index)) : themeColors.fillIconCategories}
          />
        ))}
      </>
      {colored && (
        <defs>
          <linearGradient id={getId('a')} x1={0} y1={0} x2={23.388} y2={3.635} gradientUnits="userSpaceOnUse">
            <stop stopColor={themeColors.fill1} />
            <stop offset={1} stopColor={themeColors.fill2} />
          </linearGradient>
          <linearGradient id={getId('b')} x1={0} y1={0} x2={23.388} y2={3.635} gradientUnits="userSpaceOnUse">
            <stop stopColor={themeColors.fill1} />
            <stop offset={1} stopColor={themeColors.fill2} />
          </linearGradient>
        </defs>
      )}
    </svg>
  );
};
